name: Check Latest Maintenance Release

on:
  schedule:
    - cron: '0 9 * * 1' # Jeden Montag
  workflow_dispatch:

jobs:
  check-latest-maintenance:
    runs-on: ubuntu-latest
    steps:
      - name: Git konfigurieren & Repository clonen
        run: |
          git clone https://github.com/${{ github.repository }} repo
          cd repo

          # Alle Remote-Branches holen
          git fetch --all

          # Alle Branches mit maintenance-release-* filtern
          BRANCHES=$(git branch -r | grep 'origin/maintenance-release-' | sed 's|origin/||')

          echo "üîé Gefundene Maintenance-Branches:"
          echo "$BRANCHES"

          # Die gr√∂√üte Release-Nummer extrahieren
          MAX_BRANCH=$(echo "$BRANCHES" | sed -E 's/.*release-([0-9]+)/\1 \0/' | sort -n | tail -1 | awk '{print $2}')

          if [ -z "$MAX_BRANCH" ]; then
            echo "‚ùå Kein Maintenance-Release-Branch gefunden. Abbruch."
            exit 0
          fi

          echo "üìå Aktuellster Branch: $MAX_BRANCH"

          git fetch origin main
          git fetch origin "$MAX_BRANCH"

          COMMITS=$(git log origin/main.."origin/$MAX_BRANCH" --oneline)

          if [ -n "$COMMITS" ]; then
            echo "‚ö†Ô∏è √Ñnderungen in '$MAX_BRANCH', die nicht in 'main' sind:"
            echo "$COMMITS"
            echo "::notice title=Unmerged Commits::Commits in $MAX_BRANCH sind noch nicht in main."
          else
            echo "‚úÖ '$MAX_BRANCH' ist vollst√§ndig in main enthalten."
          fi
