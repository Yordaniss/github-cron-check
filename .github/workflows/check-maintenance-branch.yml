name: Check & Create PR from Maintenance Branch

on:
  schedule:
    - cron: '0 9 * * 1' # Jeden Montag
  workflow_dispatch:

jobs:
  check-and-create-pr:
    runs-on: ubuntu-latest
    steps:
      - name: Git & GitHub CLI installieren und konfigurieren
        id: detect
        run: |
          sudo apt-get install -y gh
          git clone https://github.com/${{ github.repository }} repo
          cd repo

          git config --global user.email "action@github.com"
          git config --global user.name "GitHub Action"

          git fetch --all

          # Maintenance-Branches finden
          BRANCHES=$(git branch -r | grep 'origin/maintenance-release-' | sed 's|origin/||')

          echo "Gefundene Branches:"
          echo "$BRANCHES"

          MAX_BRANCH=$(echo "$BRANCHES" | sed -E 's/.*release-([0-9]+)/\1 \0/' | sort -n | tail -1 | awk '{print $2}')

          if [ -z "$MAX_BRANCH" ]; then
            echo "Kein Maintenance-Branch gefunden."
            exit 0
          fi

          echo "branch=$MAX_BRANCH" >> $GITHUB_OUTPUT

          # PrÃ¼fen, ob Commits in maintenance-release-X sind, die nicht in main sind
          COMMITS=$(git log origin/main..origin/$MAX_BRANCH --oneline)

          if [ -z "$COMMITS" ]; then
            echo "Keine ungemergten Commits â€“ kein PR notwendig."
            echo "changes=false" >> $GITHUB_OUTPUT
          else
            echo "Ungemergte Commits gefunden:"
            echo "$COMMITS"
            echo "changes=true" >> $GITHUB_OUTPUT
          fi

      - name: PR erstellen mit gh CLI
        if: ${{ steps.detect.outputs.changes == 'true' }}
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          gh pr create \
            --head "${{ steps.detect.outputs.branch }}" \
            --base "main" \
            --title "ðŸ”€ Merge ${{ steps.detect.outputs.branch }} into main" \
            --body "Es wurden Ã„nderungen im Branch \`${{ steps.detect.outputs.branch }}\` gefunden, die noch nicht in \`main\` enthalten sind. Dieser PR wurde automatisch erstellt." \
            --repo ${{ github.repository }}
